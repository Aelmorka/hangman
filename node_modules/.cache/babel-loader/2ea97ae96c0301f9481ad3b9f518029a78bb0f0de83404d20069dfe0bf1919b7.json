{"ast":null,"code":"var _jsxFileName = \"/Users/aelmorka/it_works/projects/hangman/src/components/Letters.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Letter from './Letter';\nimport Input from './Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Letters({\n  alphabet\n}) {\n  _s();\n  let [rows, setRows] = useState(4);\n  let numInRow = Math.ceil(alphabet.length / rows);\n  let dividedAlphabet = Array(rows).fill([]).map((row, index) => {\n    let num = index !== rows - 1 ? numInRow : alphabet.length - numInRow * (rows - 1);\n    return Array(num).fill(0).map((item, ind) => {\n      item = alphabet[index * numInRow + ind];\n      return item;\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"letters\",\n    children: [dividedAlphabet.map((el, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"letters__row\",\n        children: el.map(letter => /*#__PURE__*/_jsxDEV(Letter, {\n          letter: letter\n        }, letter.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 43\n        }, this))\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings\",\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        value: rows\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n_s(Letters, \"lDEPpo48vO3xlemSXYmuD2hucvI=\");\n_c = Letters;\nvar _c;\n$RefreshReg$(_c, \"Letters\");","map":{"version":3,"names":["useState","Letter","Input","jsxDEV","_jsxDEV","Letters","alphabet","_s","rows","setRows","numInRow","Math","ceil","length","dividedAlphabet","Array","fill","map","row","index","num","item","ind","className","children","el","letter","name","fileName","_jsxFileName","lineNumber","columnNumber","value","_c","$RefreshReg$"],"sources":["/Users/aelmorka/it_works/projects/hangman/src/components/Letters.js"],"sourcesContent":["import { useState } from 'react'\nimport Letter from './Letter'\nimport Input from './Input'\n\nexport default function Letters({alphabet}) {\n    let [rows, setRows] = useState(4)\n    let numInRow = Math.ceil(alphabet.length / rows)\n    let dividedAlphabet = Array(rows).fill([]).map((row, index) => {\n        let num = index !== rows - 1 ? numInRow : alphabet.length - numInRow * (rows - 1)\n        return Array(num).fill(0).map((item, ind) => {\n            item = alphabet[index*numInRow + ind]\n            return item\n        })\n    })\n    return (\n        <div className=\"letters\">\n            {dividedAlphabet.map((el, index) => {\n                return (\n                    <div key={index} className=\"letters__row\">\n                        {el.map(letter => <Letter key={letter.name} letter={letter}/>)}\n                    </div>\n                )\n            })}\n            <div className=\"settings\">\n                <Input value={rows}/>    \n            </div>\n        </div>\n    )\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,MAAM,SAAS;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,eAAe,SAASC,OAAOA,CAAC;EAACC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EACxC,IAAI,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACjC,IAAIU,QAAQ,GAAGC,IAAI,CAACC,IAAI,CAACN,QAAQ,CAACO,MAAM,GAAGL,IAAI,CAAC;EAChD,IAAIM,eAAe,GAAGC,KAAK,CAACP,IAAI,CAAC,CAACQ,IAAI,CAAC,EAAE,CAAC,CAACC,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAK;IAC3D,IAAIC,GAAG,GAAGD,KAAK,KAAKX,IAAI,GAAG,CAAC,GAAGE,QAAQ,GAAGJ,QAAQ,CAACO,MAAM,GAAGH,QAAQ,IAAIF,IAAI,GAAG,CAAC,CAAC;IACjF,OAAOO,KAAK,CAACK,GAAG,CAAC,CAACJ,IAAI,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,CAACI,IAAI,EAAEC,GAAG,KAAK;MACzCD,IAAI,GAAGf,QAAQ,CAACa,KAAK,GAACT,QAAQ,GAAGY,GAAG,CAAC;MACrC,OAAOD,IAAI;IACf,CAAC,CAAC;EACN,CAAC,CAAC;EACF,oBACIjB,OAAA;IAAKmB,SAAS,EAAC,SAAS;IAAAC,QAAA,GACnBV,eAAe,CAACG,GAAG,CAAC,CAACQ,EAAE,EAAEN,KAAK,KAAK;MAChC,oBACIf,OAAA;QAAiBmB,SAAS,EAAC,cAAc;QAAAC,QAAA,EACpCC,EAAE,CAACR,GAAG,CAACS,MAAM,iBAAItB,OAAA,CAACH,MAAM;UAAmByB,MAAM,EAAEA;QAAO,GAA5BA,MAAM,CAACC,IAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAkB,CAAC;MAAC,GADxDZ,KAAK;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CAAC;IAEd,CAAC,CAAC,eACF3B,OAAA;MAAKmB,SAAS,EAAC,UAAU;MAAAC,QAAA,eACrBpB,OAAA,CAACF,KAAK;QAAC8B,KAAK,EAAExB;MAAK;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACxB,EAAA,CAxBuBF,OAAO;AAAA4B,EAAA,GAAP5B,OAAO;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}