{"ast":null,"code":"var _jsxFileName = \"/Users/aelmorka/it_works/projects/hangman/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useState } from 'react';\nimport enAlphabet from './components/alphabet.json';\nimport Letters from './components/Letters';\nimport Solution from './components/Solution';\nimport Scores from './components/Scores';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let [alphabet, setAlphabet] = useState(enAlphabet);\n  let [game, setGame] = useState({\n    word: \"easy\",\n    hint: \"Some text\"\n  });\n  function checkLetter(letter) {\n    let newAlphabet = {\n      ...alphabet\n    };\n    let index = newAlphabet.letters.findIndex(el => el.name === letter);\n    newAlphabet.letters[index].checked = true;\n    setAlphabet(newAlphabet);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hangman\",\n    children: [/*#__PURE__*/_jsxDEV(Scores, {\n      scores: \"100\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Solution, {\n      game: game\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Letters, {\n      alphabet: alphabet.letters,\n      checked: checkLetter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+vxMjHqRO8mm4GYEF+QnzOAcNLY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","enAlphabet","Letters","Solution","Scores","jsxDEV","_jsxDEV","App","_s","alphabet","setAlphabet","game","setGame","word","hint","checkLetter","letter","newAlphabet","index","letters","findIndex","el","name","checked","className","children","scores","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aelmorka/it_works/projects/hangman/src/App.js"],"sourcesContent":["import './App.css';\nimport { useState } from 'react'\n\nimport enAlphabet from './components/alphabet.json'\n\nimport Letters from './components/Letters'\nimport Solution from './components/Solution'\nimport Scores from './components/Scores'\n\nfunction App() {\n  let [alphabet, setAlphabet] = useState(enAlphabet)\n  let [game, setGame] = useState({word: \"easy\", hint: \"Some text\"})\n  function checkLetter(letter) {\n    let newAlphabet = {...alphabet}\n    let index = newAlphabet.letters.findIndex(el => el.name === letter)\n    newAlphabet.letters[index].checked = true\n    setAlphabet(newAlphabet)\n  }\n  return (\n    <div className=\"hangman\">\n      <Scores scores=\"100\" />\n      <Solution game={game}/>\n      <Letters alphabet={alphabet.letters} checked={checkLetter}/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,QAAQ,QAAQ,OAAO;AAEhC,OAAOC,UAAU,MAAM,4BAA4B;AAEnD,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,MAAM,MAAM,qBAAqB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,IAAI,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAACC,UAAU,CAAC;EAClD,IAAI,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC;IAACa,IAAI,EAAE,MAAM;IAAEC,IAAI,EAAE;EAAW,CAAC,CAAC;EACjE,SAASC,WAAWA,CAACC,MAAM,EAAE;IAC3B,IAAIC,WAAW,GAAG;MAAC,GAAGR;IAAQ,CAAC;IAC/B,IAAIS,KAAK,GAAGD,WAAW,CAACE,OAAO,CAACC,SAAS,CAACC,EAAE,IAAIA,EAAE,CAACC,IAAI,KAAKN,MAAM,CAAC;IACnEC,WAAW,CAACE,OAAO,CAACD,KAAK,CAAC,CAACK,OAAO,GAAG,IAAI;IACzCb,WAAW,CAACO,WAAW,CAAC;EAC1B;EACA,oBACEX,OAAA;IAAKkB,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtBnB,OAAA,CAACF,MAAM;MAACsB,MAAM,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvBxB,OAAA,CAACH,QAAQ;MAACQ,IAAI,EAAEA;IAAK;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACvBxB,OAAA,CAACJ,OAAO;MAACO,QAAQ,EAAEA,QAAQ,CAACU,OAAQ;MAACI,OAAO,EAAER;IAAY;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzD,CAAC;AAEV;AAACtB,EAAA,CAhBQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAkBZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}