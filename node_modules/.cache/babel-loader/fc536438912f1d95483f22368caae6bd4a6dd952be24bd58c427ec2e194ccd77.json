{"ast":null,"code":"var _jsxFileName = \"/Users/aelmorka/it_works/projects/hangman/src/components/Letters.js\";\nimport Letter from './Letter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Letters({\n  rowNum,\n  alphabet\n}) {\n  let numInRow = Math.ceil(alphabet.length / rowNum);\n  let dividedAlphabet = Array(rowNum).fill([]).map((row, index) => {\n    let part = Array(numInRow);\n    let l = part.fill(0).map((item, ind) => {\n      item = alphabet[index * numInRow + ind];\n      return item;\n    });\n    // for (let j = 0; j < numInRow; j++) {\n    //     if (index*numInRow + j < alphabet.length)\n    //         {part.push(alphabet[index*numInRow + j])}\n    // }\n    return l;\n  });\n\n  // for (let i = 0 ; i < rowNum; i++) {\n\n  //     dividedAlphabet.push(part)\n  // }\n  console.log(dividedAlphabet);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"letters\",\n    children: dividedAlphabet.map(el => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"letters__row\",\n        children: el.map(letter => /*#__PURE__*/_jsxDEV(Letter, {\n          letter: letter\n        }, letter.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 43\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_c = Letters;\nvar _c;\n$RefreshReg$(_c, \"Letters\");","map":{"version":3,"names":["Letter","jsxDEV","_jsxDEV","Letters","rowNum","alphabet","numInRow","Math","ceil","length","dividedAlphabet","Array","fill","map","row","index","part","l","item","ind","console","log","className","children","el","letter","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aelmorka/it_works/projects/hangman/src/components/Letters.js"],"sourcesContent":["import Letter from './Letter'\nexport default function Letters({rowNum, alphabet}) {\n    let numInRow = Math.ceil(alphabet.length / rowNum)\n    let dividedAlphabet = Array(rowNum).fill([]).map((row, index) => {\n        let part = Array(numInRow)\n        let l = part.fill(0).map((item, ind) => {\n            item = alphabet[index*numInRow + ind]\n            return item\n        })\n        // for (let j = 0; j < numInRow; j++) {\n        //     if (index*numInRow + j < alphabet.length)\n        //         {part.push(alphabet[index*numInRow + j])}\n        // }\n        return l\n    })\n    \n    // for (let i = 0 ; i < rowNum; i++) {\n        \n    //     dividedAlphabet.push(part)\n    // }\n    console.log(dividedAlphabet)\n    return (\n        <div className=\"letters\">\n            {dividedAlphabet.map(el => {\n                return (\n                    <div className=\"letters__row\">\n                        {el.map(letter => <Letter key={letter.name} letter={letter}/>)}\n                    </div>\n                )\n            })}\n        </div>\n    )\n}"],"mappings":";AAAA,OAAOA,MAAM,MAAM,UAAU;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAC7B,eAAe,SAASC,OAAOA,CAAC;EAACC,MAAM;EAAEC;AAAQ,CAAC,EAAE;EAChD,IAAIC,QAAQ,GAAGC,IAAI,CAACC,IAAI,CAACH,QAAQ,CAACI,MAAM,GAAGL,MAAM,CAAC;EAClD,IAAIM,eAAe,GAAGC,KAAK,CAACP,MAAM,CAAC,CAACQ,IAAI,CAAC,EAAE,CAAC,CAACC,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAK;IAC7D,IAAIC,IAAI,GAAGL,KAAK,CAACL,QAAQ,CAAC;IAC1B,IAAIW,CAAC,GAAGD,IAAI,CAACJ,IAAI,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,CAACK,IAAI,EAAEC,GAAG,KAAK;MACpCD,IAAI,GAAGb,QAAQ,CAACU,KAAK,GAACT,QAAQ,GAAGa,GAAG,CAAC;MACrC,OAAOD,IAAI;IACf,CAAC,CAAC;IACF;IACA;IACA;IACA;IACA,OAAOD,CAAC;EACZ,CAAC,CAAC;;EAEF;;EAEA;EACA;EACAG,OAAO,CAACC,GAAG,CAACX,eAAe,CAAC;EAC5B,oBACIR,OAAA;IAAKoB,SAAS,EAAC,SAAS;IAAAC,QAAA,EACnBb,eAAe,CAACG,GAAG,CAACW,EAAE,IAAI;MACvB,oBACItB,OAAA;QAAKoB,SAAS,EAAC,cAAc;QAAAC,QAAA,EACxBC,EAAE,CAACX,GAAG,CAACY,MAAM,iBAAIvB,OAAA,CAACF,MAAM;UAAmByB,MAAM,EAAEA;QAAO,GAA5BA,MAAM,CAACC,IAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAkB,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7D,CAAC;IAEd,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACC,EAAA,GA/BuB5B,OAAO;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}